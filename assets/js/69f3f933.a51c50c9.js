"use strict";(self.webpackChunk_nx_dotnet_source=self.webpackChunk_nx_dotnet_source||[]).push([[405],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>v});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),s=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(r),m=n,v=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return r?o.createElement(v,i(i({ref:t},p),{},{components:r})):o.createElement(v,i({ref:t},p))}));function v(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:n,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5595:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>v,frontMatter:()=>c,metadata:()=>s,toc:()=>u});var o=r(7462),n=r(3366),a=(r(7294),r(3905)),i=["components"],c={},l="@nx-dotnet/core:move",s={unversionedId:"core/Generators/move",id:"core/Generators/move",title:"@nx-dotnet/core:move",description:"@nx-dotnet/core:move",source:"@site/../../docs/core/Generators/move.md",sourceDirName:"core/Generators",slug:"/core/Generators/move",permalink:"/docs/core/Generators/move",draft:!1,editUrl:"https://github.com/nx-dotnet/nx-dotnet/edit/master/docs/../../docs/core/Generators/move.md",tags:[],version:"current",frontMatter:{},sidebar:"someSidebar",previous:{title:"@nx-dotnet/core:library",permalink:"/docs/core/Generators/library"},next:{title:"@nx-dotnet/core:nuget-reference",permalink:"/docs/core/Generators/nuget-reference"}},p={},u=[{value:"@nx-dotnet/core:move",id:"nx-dotnetcoremove-1",level:2},{value:"Options",id:"options",level:2},{value:'<span className="required">projectName</span>',id:"projectname",level:3},{value:'<span className="required">destination</span>',id:"destination",level:3},{value:"relativeToRoot",id:"relativetoroot",level:3}],d={toc:u},m="wrapper";function v(e){var t=e.components,r=(0,n.Z)(e,i);return(0,a.kt)(m,(0,o.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"nx-dotnetcoremove"},"@nx-dotnet/core:move"),(0,a.kt)("h2",{id:"nx-dotnetcoremove-1"},"@nx-dotnet/core:move"),(0,a.kt)("p",null,"Moves {projectName} to {destination}. Renames the Nx project to match the new folder location. Additionally, updates any .csproj, .vbproj, .fsproj, or .sln files which pointed to the project."),(0,a.kt)("h2",{id:"options"},"Options"),(0,a.kt)("h3",{id:"projectname"},(0,a.kt)("span",{className:"required"},"projectName")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"(string): Name of the project to move")),(0,a.kt)("h3",{id:"destination"},(0,a.kt)("span",{className:"required"},"destination")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"(string): Where should it be moved to?")),(0,a.kt)("h3",{id:"relativetoroot"},"relativeToRoot"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"(boolean): If true, the destination path is relative to the root rather than the workspace layout from nx.json")))}v.isMDXComponent=!0}}]);